<diagram program="umletino" version="14.2"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>0</x><y>0</y><w>350</w><h>640</h></coordinates><panel_attributes>&lt;&lt;abstract&gt;&gt;
AbstractGA
Package::metaheuristics
--
_+ verbose: Boolean_
_+ rng: Random_
# ObjFunction: Evaluator&lt;F&gt;
# generations: int
# popSize: int
# chromosomeSize: int
# mutationRate: Double
# bestCost: Double
# bestSol: Solution&lt;F&gt;
# bestChromosome: Chromosome
--
+ AbstractGA(objFunction: Evaluator&lt;F&gt;, 
generations: Integer, popSize: Integer, mutationRate: Double)
/+ createEmptySol(): void/
/#decode(chromosome: Chromosome): Solution&lt;F&gt;/
/#generateRandomChromosome(): Chromosome/
/#fitness(chromosome: Chromosome): Double/
/#mutateGene(chromosome: Chromosome, locus: Integer): void/
+ solve(): Solution&lt;F&gt;
# initializePopulation(): Population
# getBestChromosome(population: Population): Chromosome
# getWorseChromosome(population: Population): Chromosome
# selectParents(population Population): Population
# mutate(offsprings Population): Population
# crossover(parents Population): Population
# selectPopulation(offsprings Population): Population
--
Abstract class for metaheuristic GRASP (Greedy Randomized
 Adaptive Search Procedure). It consider a minimization problem.
--

{innerclass
Chromosome
--

--

innerclass}

{innerclass
Population
--

--

innerclass}
bg=#F8E0E6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>380</x><y>0</y><w>340</w><h>250</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
Evaluator&lt;E&gt;
Package::problems
--

--
/+ getDomainSize(): Integer/
/+ evaluate(sol: Solution&lt;E&gt;): Double/
/+ evaluateInsertionCost(elem E, sol Solution&lt;E&gt;): Double/
/+ evaluateRemovalCost(elem E, sol Solution&lt;E&gt;): Double/
/+ evaluateExchangeCost(elemIn E, elemOut E, sol /
/Solution&lt;E&gt;): Double/
--
The Evaluator interface gives to a problem the required 
functionality to obtain a mapping of a solution (n-dimensional 
array of elements of generic type E (domain)) to a Double 
(image). It is a useful representation of an objective function 
for an optimization problem.
bg=#CEE3F6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>660</x><y>270</y><w>210</w><h>190</h></coordinates><panel_attributes>&lt;&lt;abstract&gt;&gt;
AbstractGraph
Package::problems
--
# costMatrix: float[][]
# nodesNumber: int
+ rnd: Random
--
+ AbstractGraph(nodes: int)
+ getNodesNumber(): int
/# setCost(i: int, j: int, cost: float): void/
/# setRandomCosts(): void/
--
Abstract Class for generic graphs
bg=#F8E0E6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>381</x><y>330</y><w>210</w><h>140</h></coordinates><panel_attributes>UndirectedGraph
Package::districting
--

--
+ Graph(nodes: int)
+ setCost(i: int, j: int, cost: float): void
+ setRandomCosts(): void
--
Class for undirected graph element.
bg=#D0F5A9</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>631</x><y>520</y><w>210</w><h>130</h></coordinates><panel_attributes>Solution
Package::solutions
--
- cost: Double
--
+ Solution()
+ Solution(sol: Solution&lt;E&gt;)
+ toString(): String
--
bg=#D0F5A9</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>391</x><y>520</y><w>210</w><h>100</h></coordinates><panel_attributes>DistrictingGA
Package::solvers
--

--

--
bg=#D0F5A9</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>872</x><y>570</y><w>100</w><h>30</h></coordinates><panel_attributes>ArrayList
bg=#D0F5A9</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>578</x><y>380</y><w>100</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>80;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>560</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>830</x><y>570</y><w>70</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>710</x><y>450</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>470</x><y>240</y><w>30</w><h>110</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element></diagram>